openapi: '3.0.0'
info:
  version: 1.0.1
  title: 'TODO API'
  description: 'A simple HTTP API for prototypes'
tags:
  - name: system
    description: Everything about system
  - name: todo
    description: Everything about todos

paths:
  /v1/todos:
    post:
      tags:
        - todo
      description: Creates a todo
      operationId: createTodo
      requestBody:
        description: Todo to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoCreate'
      responses:
        '200':
          description: Todo created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - todo
      description: Returns all todos
      operationId: getAllTodos
      responses:
        '200':
          description: An array of todos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/todo/{id}:
    put:
      tags:
        - todo
      description: Updates a todo
      operationId: updateTodo
      parameters:
        - name: id
          in: path
          description: ID of todo to return
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      requestBody:
        description: Todo to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        '200':
          description: Todo updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - todo
      description: Patch a todo
      operationId: patchTodo
      parameters:
        - name: id
          in: path
          description: ID of todo to patch
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      requestBody:
        description: Todo to patch
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoPatch'
      responses:
        '200':
          description: Todo updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - todo
      description: Deletes a todo
      operationId: deleteTodo
      parameters:
        - name: id
          in: path
          description: ID of todo to return
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      responses:
        '200':
          description: Todo deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - todo
      description: Returns a todo
      operationId: getTodo
      parameters:
        - name: id
          in: path
          description: ID of todo to return
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      responses:
        '200':
          description: A todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /__/health:
    get:
      tags:
        - system
      description: Returns system status
      operationId: health
      responses:
        '200':
          description: health response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Health'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    TodoPatch:
      type: object
      properties:
        id:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
        title:
          type: string
        completed:
          type: boolean
      minProperties: 1
    TodoCreate:
      type: object
      required:
        - title
      properties:
        title:
          type: string
    Todo:
      type: object
      required:
        - id
        - title
        - completed
      properties:
        id:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
        title:
          type: string
        completed:
          type: boolean
    Health:
      type: object
      properties:
        status:
          type: string
          enum:
            - UP
            - DOWN
      required:
        - status
    Error:
      type: object
      additionalProperties: true
      required:
        - message
      properties:
        message:
          type: string
